{
  "$schema": "http://json-schema.org/draft-07/schema#",

  "type": "object",
  "description": "Browser Extension Manifest",
  "properties": {
    "permissions": { "$ref": "#/definitions/Permissions" },
    "optional_permissions": { "$ref": "#/definitions/OptionalPermissions" },
    "host_permissions": { "$ref": "#/definitions/HostPermissions" },

    "action": { "$ref": "#/definitions/Action" },
    "commands": { "$ref": "#/definitions/Commands" },
    "default_locale": { "$ref": "#/definitions/DefaultLocale" },
    "incognito": { "$ref": "#/definitions/Incognito" },
    "key": { "$ref": "#/definitions/Key" },
    "minimum_chrome_version": { "$ref": "#/definitions/MinimumChromeVersion" },
    "oauth2": { "$ref": "#/definitions/OAuth2" },
    "omnibox": { "$ref": "#/definitions/Omnibox" },
    "options_page": { "$ref": "#/definitions/OptionsPage" },
    "options_ui": { "$ref": "#/definitions/OptionsUi" },
    "short_name": { "$ref": "#/definitions/ShortName" }
  },
  "required": [],
  "additionalProperties": false,

  "definitions": {
    "DefaultLocale": {
      "type": "string",
      "description": "Specifies the subdirectory of _locales that contains the default strings for this extension.",
      "default": "en"
    },

    "Commands": {
      "type": "object",
      "description": "Use the commands API to add keyboard shortcuts that trigger actions in your extension, for example, an action to open the browser action or send a command to the extension.",
      "patternProperties": {
        ".*": { "$ref": "#/definitions/Command" },
        "^_execute_browser_action$": { "$ref": "#/definitions/Command" },
        "^_execute_page_action$": { "$ref": "#/definitions/Command" }
      }
    },

    "Command": {
      "type": "object",
      "if": {
        "$comment": "Global shortcuts change the acceptable pattern for the suggested_key.",
        "properties": {
          "global": {
            "const": true
          }
        },
        "required": ["global"]
      },
      "then": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string"
          },
          "global": {
            "type": "boolean",
            "description": "Whether this command should work while Chrome does not have focus. Keyboard shortcut suggestions for global commands are limited to Ctrl+Shift+[0..9]"
          },
          "suggested_key": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
              "^(default|mac|windows|linux|chromeos)$": {
                "type": "string",
                "pattern": "^(Ctrl|Command|MacCtrl)\\+Shift\\+[0-9]"
              }
            }
          }
        }
      },
      "else": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string"
          },
          "global": {
            "type": "boolean",
            "description": "Whether this command should work while Chrome does not have focus. Keyboard shortcut suggestions for global commands are limited to Ctrl+Shift+[0..9]"
          },
          "suggested_key": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
              "^(default|mac|windows|linux|chromeos)$": {
                "type": "string",
                "pattern": "^(Ctrl|Command|MacCtrl|Alt|Option)\\+(Shift\\+)?[A-Z]"
              }
            }
          }
        }
      }
    },

    "Action": {
      "type": "object",
      "description": "Used to control the toolbar button for your extension in Chrome's UI.",
      "properties": {
        "default_title": {
          "type": "string",
          "description": "Tooltip for the main toolbar icon."
        },
        "default_popup": {
          "$ref": "#/definitions/Uri",
          "description": "The popup appears when the user clicks the icon."
        },
        "default_icon": {
          "type": "object",
          "properties": {
            "16": {
              "$ref": "#/definitions/Icon"
            },
            "24": {
              "$ref": "#/definitions/Icon"
            },
            "32": {
              "$ref": "#/definitions/Icon"
            }
          }
        }
      },
      "dependencies": {
        "name": {
          "not": {
            "required": ["name"]
          }
        },
        "icons": {
          "not": {
            "required": ["icons"]
          }
        },
        "popup": {
          "not": {
            "required": ["popup"]
          }
        }
      }
    },

    "GlobPattern": {
      "type": "string",
      "format": "glob-pattern"
    },

    "Icon": {
      "$ref": "#/definitions/Uri"
    },

    "MatchPattern": {
      "type": "string",
      "format": "match-pattern",
      "pattern": "^((\\*|http|https|file|ftp|chrome-extension):\\/\\/(\\*|\\*\\.[^\\/\\*]+|[^\\/\\*]+)?(\\/.*))|urn:(\\*|.*)|<all_urls>$"
    },

    "Page": {
      "$ref": "#/definitions/Uri"
    },

    "ShortName": {
      "type": "string",
      "description": "The short name is typically used where there is insufficient space to display the full name.",
      "maxLength": 12
    },

    "Permissions": {
      "$ref": "#/definitions/GeneralPermissions",
      "description": "Permissions help to limit damage if your extension or app is compromised by malware. Some permissions are also displayed to users before installation, as detailed in Permission Warnings."
    },

    "HostPermissions": {
      "type": "array",
      "uniqueItems": true,
      "items": { "type": "string" }
    },

    "GeneralPermissions": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "accessibilityFeatures.modify",
              "accessibilityFeatures.read",
              "activeTab",
              "alarms",
              "audio",
              "background",
              "bookmarks",
              "browsingData",
              "certificateProvider",
              "clipboardRead",
              "clipboardWrite",
              "contentSettings",
              "contextMenus",
              "cookies",
              "debugger",
              "declarativeContent",
              "declarativeNetRequest",
              "declarativeNetRequestWithHostAccess",
              "declarativeNetRequestFeedback",
              "dns",
              "desktopCapture",
              "documentScan",
              "downloads",
              "downloads.open",
              "downloads.ui",
              "enterprise.deviceAttributes",
              "enterprise.hardwarePlatform",
              "enterprise.networkingAttributes",
              "enterprise.platformKeys",
              "favicon",
              "fileBrowserHandler",
              "fileSystemProvider",
              "fontSettings",
              "gcm",
              "geolocation",
              "history",
              "identity",
              "identity.email",
              "idle",
              "loginState",
              "management",
              "nativeMessaging",
              "notifications",
              "offscreen",
              "pageCapture",
              "platformKeys",
              "power",
              "printerProvider",
              "printing",
              "printingMetrics",
              "privacy",
              "processes",
              "proxy",
              "readingList",
              "runtime",
              "scripting",
              "search",
              "sessions",
              "sidePanel",
              "storage",
              "system.cpu",
              "system.display",
              "system.memory",
              "system.storage",
              "tabCapture",
              "tabGroups",
              "tabs",
              "topSites",
              "tts",
              "ttsEngine",
              "unlimitedStorage",
              "vpnProvider",
              "wallpaper",
              "webAuthenticationProxy",
              "webNavigation",
              "webRequest",
              "webRequestBlocking"
            ]
          }
        ]
      }
    },

    "Scripts": {
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/Uri"
      }
    },

    "Uri": {
      "type": "string"
    },

    "VersionString": {
      "type": "string",
      "pattern": "^(?:\\d{1,5}\\.){0,3}\\d{1,5}$"
    },

    "Incognito": {
      "type": "string",
      "description": "Specify how this extension will behave if allowed to run in incognito mode.",
      "enum": ["spanning", "split", "not_allowed"],
      "default": "spanning"
    },

    "Key": {
      "type": "string",
      "description": "This value can be used to control the unique ID of an extension, app, or theme when it is loaded during development."
    },

    "MinimumChromeVersion": {
      "$ref": "#/definitions/VersionString",
      "description": "The version of Chrome that your extension, app, or theme requires, if any."
    },

    "OAuth2": {
      "type": "object",
      "description": "Use the Chrome Identity API to authenticate users: the getAuthToken for users logged into their Google Account and the launchWebAuthFlow for users logged into a non-Google account.",
      "required": ["client_id", "scopes"],
      "additionalProperties": false,
      "properties": {
        "client_id": {
          "type": "string",
          "description": "You need to register your app in the Google APIs Console to get the client ID."
        },
        "scopes": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      }
    },

    "Omnibox": {
      "type": "object",
      "description": "The omnibox API allows you to register a keyword with Google Chrome's address bar, which is also known as the omnibox.",
      "required": ["keyword"],
      "additionalProperties": false,
      "properties": {
        "keyword": {
          "type": "string",
          "description": "The keyword that will trigger your extension."
        }
      }
    },

    "OptionalPermissions": {
      "$ref": "#/definitions/GeneralPermissions",
      "description": "Use the chrome.permissions API to request declared optional permissions at run time rather than install time, so users understand why the permissions are needed and grant only those that are necessary."
    },

    "OptionsPage": {
      "$ref": "#/definitions/Page",
      "description": "To allow users to customize the behavior of your extension, you may wish to provide an options page. If you do, a link to it will be provided from the extensions management page at chrome://extensions. Clicking the Options link opens a new tab pointing at your options page.",
      "default": "options.html"
    },

    "OptionsUi": {
      "type": "object",
      "description": "To allow users to customize the behavior of your extension, you may wish to provide an options page. If you do, an Options link will be shown on the extensions management page at chrome://extensions which opens a dialogue containing your options page.",
      "required": ["page"],
      "properties": {
        "page": {
          "type": "string",
          "description": "The path to your options page, relative to your extension's root."
        },
        "chrome_style": {
          "type": "boolean",
          "default": true,
          "description": "If true, a Chrome user agent stylesheet will be applied to your options page. The default value is false, but we recommend you enable it for a consistent UI with Chrome."
        },
        "open_in_tab": {
          "type": "boolean",
          "default": false,
          "description": "If true, your extension's options page will be opened in a new tab rather than embedded in chrome://extensions. The default is false, and we recommend that you don't change it. This is only useful to delay the inevitable deprecation of the old options UI! It will be removed soon, so try not to use it. It will break."
        }
      }
    }
  }
}
